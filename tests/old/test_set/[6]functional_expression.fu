#-----------------------------------------------
# This program tests the functional expressions
#-----------------------------------------------

fig functional_expressions {
	size <- 4, 2

	# define independent variable
	x <- [1, 2, 3, 4, 5]

	# a simplest functional expression is a constant function
	# e.g. f1(x) = 10.2, f2(x) = -1
	f1 <- 10.2
	f2 <- -1

	# another simple functional expression is
	# the identity function i.e. f3(x) = x
	f3 <- x

	# another simple functional expression is
	# the scalar multiplication e.g f4(x) = 10 * x
	f4 <- 10 * x

	# we can construct simple functions using operators
	# e.g. f5(x) = x^2 or f6(x) = (x^1 - x^2 + x^3 - x^4) % 10
	f5 <- x^2
	f6 <- (x^1 - x^2 + x^3 - x^4) % 10

	# we can also use transcendental functions
	# to construct functional expressions
	# e.g. f7(x) = sin(x) + cos(x)
	f7 <- sin(x) + cos(x)

	# and finally we can use any combination to generate
	# as complicated functional expression as we like
	# e.g. f8(x) = (e^-(10 + x)/(10 + x))*(sin(20 * (x ^ 0.5)))*(x % 3)
	f8 <- (exp(-1*(10 + x))/(10 + x))*(sin(20 * (x ^ 0.5)))*(x % 3)

	# plot all the curves
	f1 <- func x
	f2 <- func x
	f3 <- func x
	f4 <- func x
	f5 <- func x
	f6 <- func x
	f7 <- func x
	f8 <- func x
}

